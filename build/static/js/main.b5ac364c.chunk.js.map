{"version":3,"sources":["store/store.js","api.js","Components/User.js","Components/TodoItem.js","Components/TodoList.js","App.js","index.js"],"names":["actionTypes","createStore","state","action","type","Object","objectSpread2","todos","getData","url","fetch","then","response","json","User","_ref","userData","react_default","a","createElement","name","connect","sortedTodos","dispatch","setTodos","newTodos","todo","id","title","Components_User","user","className","completed","onClick","filter","todoItem","map","column","key","event","by","toConsumableArray","sort","b","localeCompare","sortTodos","target","innerText","Components_TodoItem","_useState","useState","_useState2","slicedToArray","isLoading","setLoading","length","_ref2","_ref3","todosFromServer","usersFromServer","regenerator_default","async","_context","prev","next","awrap","Promise","all","sent","find","userId","t0","console","error","finish","stop","Components_TodoList","ReactDOM","render","es","store","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.b5ac364c.chunk.js","sourcesContent":["import { createStore } from 'redux';\n\nexport const actionTypes = {\n  SET_TODOS: 'setTodos',\n};\n\nconst initialState = {\n  todos: [],\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case actionTypes.SET_TODOS:\n      return {\n        ...state,\n        todos: action.todos,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default createStore(reducer, initialState);\n","const todosURL = 'https://jsonplaceholder.typicode.com/todos';\nconst usersURL = 'https://jsonplaceholder.typicode.com/users';\n\nconst getData = url => fetch(url)\n  .then(response => response.json());\n\nexport const getTodos = () => getData(todosURL);\nexport const getUsers = () => getData(usersURL);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ userData }) => (\n  <td>{userData.name}</td>\n);\n\nUser.propTypes = { userData: PropTypes.shape({\n  name: PropTypes.string,\n}).isRequired };\n\nexport default User;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { actionTypes } from '../store/store';\nimport User from './User';\n\nconst TodoItem = ({ todos, todo, setTodos }) => {\n  const deleteTodo = () => {\n    setTodos(todos.filter(todoItem => todoItem.id !== todo.id));\n  };\n\n  return (\n    <tbody>\n      <tr>\n        <td>{todo.id}</td>\n        <td>{todo.title}</td>\n        <User userData={todo.user} />\n        <td\n          className={todo.completed ? 'completed' : 'not-completed'}\n        >\n          {todo.completed ? 'yes' : 'no'}\n        </td>\n        <td>\n          <button\n            type=\"button\"\n            onClick={deleteTodo}\n          >\n            x\n          </button>\n        </td>\n      </tr>\n    </tbody>\n  );\n};\n\nconst getData = state => ({\n  todos: state.todos,\n  sortedTodos: state.sortedTodos,\n});\n\nconst getMethods = dispatch => ({\n  setTodos: newTodos => dispatch({\n    type: actionTypes.SET_TODOS,\n    todos: newTodos,\n  }),\n});\n\nTodoItem.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  setTodos: PropTypes.func.isRequired,\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    user: PropTypes.object,\n  }).isRequired,\n};\n\nexport default connect(getData, getMethods)(TodoItem);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { actionTypes } from '../store/store';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ todos, setTodos }) => {\n  const sortTodos = (by) => {\n    switch (by) {\n      case 'user':\n        setTodos([...todos]\n          .sort((a, b) => a.user.name.localeCompare(b.user.name)));\n        break;\n\n      case 'title':\n        setTodos([...todos].sort((a, b) => a.title.localeCompare(b.title)));\n        break;\n\n      default:\n        setTodos([...todos].sort((a, b) => a[by] - b[by]));\n    }\n  };\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          {['id', 'title', 'user', 'completed'].map(column => (\n            <th\n              key={column}\n              onClick={event => sortTodos(event.target.innerText)}\n            >\n              {column}\n            </th>\n          ))}\n        </tr>\n      </thead>\n      {todos.map(todo => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </table>\n  );\n};\n\nconst getData = state => ({\n  todos: state.todos,\n  sortedTodos: state.sortedTodos,\n});\n\nconst getMethods = dispatch => ({\n  setTodos: newTodos => dispatch({\n    type: actionTypes.SET_TODOS,\n    todos: newTodos,\n  }),\n});\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    user: PropTypes.shape({\n      name: PropTypes.string,\n    }),\n  })).isRequired,\n  setTodos: PropTypes.func.isRequired,\n};\n\nexport default connect(getData, getMethods)(TodoList);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport './App.css';\nimport { getTodos, getUsers } from './api';\nimport { actionTypes } from './store/store';\nimport TodoList from './Components/TodoList';\n\nconst App = ({ todos, setTodos }) => {\n  const [isLoading, setLoading] = useState(false);\n\n  const loadTodosAndUsers = async() => {\n    setLoading(true);\n\n    try {\n      const [\n        todosFromServer,\n        usersFromServer,\n      ] = await Promise.all([getTodos(), getUsers()]);\n\n      setTodos(todosFromServer.map(todo => ({\n        ...todo,\n        user: usersFromServer.find(user => user.id === todo.userId),\n      })));\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of todos</h1>\n      {isLoading && <h2>Loading...</h2>}\n      {!isLoading && (todos.length === 0 ? (\n        <button\n          type=\"button\"\n          onClick={loadTodosAndUsers}\n        >\n          Load\n        </button>\n      ) : (\n        <TodoList />\n      ))}\n    </div>\n  );\n};\n\nconst getData = state => ({\n  todos: state.todos,\n});\n\nconst getMethods = dispatch => ({\n  setTodos: newTodos => dispatch({\n    type: actionTypes.SET_TODOS,\n    todos: newTodos,\n  }),\n});\n\nApp.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  setTodos: PropTypes.func.isRequired,\n};\n\nexport default connect(getData, getMethods)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}